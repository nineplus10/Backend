services:
  server:
    build: .
    ports: 
      - 7788:${APP_PORT}
    working_dir: /app
    volumes:
      - ./:/app
    environment:
      ACC_APP_ENV: ${APP_ENV:-DEVEL}
      ACC_APP_PORT: ${APP_PORT:-8000}

      ACC_ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET:-you_wouldnt_guess_it}
      ACC_ACCESS_TOKEN_LIFETIME: ${ACCESS_TOKEN_LIFETIME:-10}
      ACC_REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET:-quit_it_its_no_use}
      ACC_REFRESH_TOKEN_LIFETIME: ${REFRESH_TOKEN_LIFETIME:-10}

      ACC_AUTH_MAX_FAIL: ${AUTH_MAX_FAIL:-3}
      ACC_AUTH_FAIL_COOLDOWN: ${AUTH_FAIL_COOLDOWN:-10}

      ACC_DB_URL: ${DB_URL:-postgresql://postgres:dont_you_have_something_better_to_do@db-main:5432/mydb?schema=public}
      ACC_CACHE_URL: ${CACHE_URL:-redis://:dont_you_have_something_better_to_do@db-cache:6379/0}
    depends_on:
      db-main:
        condition: service_healthy
        restart: true
      db-cache:
        condition: service_healthy

  db-main:
    image: postgres:17-alpine
    volumes: 
      - main-db-vol:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASS:-dont_you_have_something_better_to_do}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      retries: 5
      start_period: 3s
      timeout: 10s

  db-cache:
    image: valkey/valkey:8-alpine
    command: "valkey-server --save 60 1 --loglevel warning" # Fine-tune later
    volumes:
      - cache-db-vol:/data
    healthcheck:
      test: ["CMD-SHELL", "valkey-cli ping"]
      interval: 10s
      retries: 5
      start_period: 3s
      timeout: 10s

volumes:
  main-db-vol:
  cache-db-vol:
